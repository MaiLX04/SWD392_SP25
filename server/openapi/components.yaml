components:
  schemas:
    LoginBody:
      type: object
      properties:
        email:
          type: string
          example: example@gmail.com
        password:
          type: string
          example: 123456  
    SuccessAuthentication:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9
        refresh_token:
          type: string
          example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9  
    User:
      type: object
      properties:
        id:
          type: string
          format: MongoId
          example: "67c556ff00a7db27ac1ce54b"
        name:
          type: string
          example: "Bá Thắng"
        email:
          type: string
          format: email
          example: "bathangzed@gmail.com"
        date_of_birth:
          type: string
          format: date-time
          example: "2004-03-17T17:00:00.000Z" 
    OfferCreateRequestBody:
      type: object
      properties:
        offerItem:
          type: string
          description: Name of the offered item
          example: Blindbox LaBuBu 3
        offerDescription:
          type: string
          description: Description of the offered item
          example: A limited edition LaBuBu 3
        offerImage:
          type: string
          format: url
          description: URL of the offered item's image
          example: https://example.com/limited-labubu3.jpg
        userId:
          type: string
          format: MongoId
          description: ID of the user creating the offer
          example: 65d8c9e8f1a2b34d56789abc
        requestId:
          type: string
          format: MongoId
          description: ID of the trade request
          example: 67c753b87cba5b9fcdc8d19b
      required:
        - offerItem
        - offerDescription
        - offerImage
        - userId
        - requestId
    OfferCreateSuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: Offer created successfully
        result:
          type: object
          properties:
            acknowledged:
              type: boolean
              example: true
            insertedId:
              type: string
              format: MongoId
              example: 67d061d67dce9bc60ba5de6f
    OfferCreateBadRequestResponse:
      type: object
      properties:
        message:
          type: string
          example: Validation error
        errors:
          type: object
          description: Object containing validation errors for each field
          example:
            offerItem: "Offer item is required"
    OfferCreateInternalServerErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Invalid ObjectId format for userId or requestId
    Offer:
      type: object
      properties:
        _id:
          type: string
          format: MongoId
          example: "67c6d35876f7198f2b506154"
        offerItem:
          type: string
          example: "Blindbox Cabybara Figure"
        offerDescription:
          type: string
          example: "A limited Cabybara Figure edition"
        offerImage:
          type: string
          format: url
          example: "https://example.com/limited-capybara-figure.jpg"
        userId: #changed from requesterId
          type: string
          format: MongoId
          example: "65d8c9e8f1a2b34d56789abc"
        requestId:
          type: string
          format: MongoId
          example: "65e8c9e8f1a2b34d56789def"
        offerStatus:
          type: string
          enum:
            - "Pending"
            - "Accepted"
            - "Declined"
            - "Completed"
          example: "Pending"
        createdAt:
          type: string
          format: date-time
          example: "2025-03-04T10:18:00.689Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-03-05T04:59:38.763Z"   
    OfferUpdateRequestBody:
      type: object
      properties:
        offerItem:
          type: string
          description: Name of the offered item
          example: Blindbox LaBuBu 4
        offerDescription:
          type: string
          description: Description of the offered item
          example: A limited edition LaBuBu 4
        offerImage:
          type: string
          format: url
          description: URL of the offered item's image
          example: https://example.com/limited-labubu4.jpg
        userId:
          type: string
          format: MongoId
          description: ID of the user creating the offer
          example: 65d8c9e8f1a2b34d56789abc
        requestId:
          type: string
          format: MongoId
          description: ID of the trade request
          example: 67c753b87cba5b9fcdc8d19b
      required:
        - offerItem
        - offerDescription
        - offerImage
        - userId
        - requestId   
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT